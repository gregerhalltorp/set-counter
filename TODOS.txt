[X] ESLINT!
[X] Actioncreators + actions
[X] Load localStorage, put that in store
[X] How to do the storage side effect?
[X] Prop types
[X] Rethink store some
[X] Firebase Auth
[X] Experiment with firebase
[X] Sagas
[X] (save to firebase)
[X] Refactor some more: Create ExerciseHandler, can take some props and be connected => Reselect
[X] Reselect (move that logic there)
[X] Rethink store, this is no good (best after understanding some auth, will affect this!)
[ ] Refactor! Refactor! Refactor!
[ ] SCSS
[ ] Better progress indicator - show percentage of goal
[ ] Better Mobile design menu
[ ] Better Mobile design login
[ ] Dive into-feaure -> show yearly stats
[ ] Features

// Extra small devices (portrait phones, less than 576px)
// No media query since this is the default in Bootstrap

// Small devices (landscape phones, 576px and up)
@media (min-width: 576px) { ... }

// Medium devices (tablets, 768px and up)
@media (min-width: 768px) { ... }

// Large devices (desktops, 992px and up)
@media (min-width: 992px) { ... }

// Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { ... }

Model can now be used as is (map field on document) or populate exercises as subcollection of user and sets as a
subcollection of exercise.
To move A -> B requires that field exercises on user be moved from map to subcollection.
On login get user document. If it has exercise field, load that and write it to collection (and load into state). 
Else if it has exercise subcollection, load from that. Write both to new structure. (New name might be necessary)

Some sort of toggle for "guest mode" is necessary, think about it!

Is offline really functional? If users can create new exercises then no. Sets are ok (if you break it its your own fault!)

Better syncing is necessary! Maybe split up localStorage on users? To enable multiple logins?
Sync exercises separate from each other?

Indicate login modes!
Indicate syncing?

* ids: node-uuid (node-uuid.v4())
* toastr: start here: https://github.com/diegoddox/react-redux-toastr
* https://medium.com/@andsens/radial-progress-indicator-using-css-a917b80c43f9



